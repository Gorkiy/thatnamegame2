import React, { Component } from 'react';
import './Modal.css';

class Modal extends Component {
  constructor(props) {
    super(props);
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick() {
    this.props.onButtonClick();
  }
  
  getContent() {
    if (this.props.gameEnded) {      
      let recordPart = this.defineRecord() ? '–≠—Ç–æ, –Ω–∞ —Å–µ–∫—É–Ω–¥–æ—á–∫—É, –Ω–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥!' : '';
      let pointsPart = this.defineWordEnding(this.props.score.human);

      return {
        title: '–í—Å–µ, –ø—Ä–∏–µ—Ö–∞–ª–∏!',
        description: <React.Fragment>–Ø –Ω–∞—Å—á–∏—Ç–∞–ª <strong>{this.props.score.human}</strong> –±–∞–ª–ª{pointsPart}. {recordPart}<br/>
        –ñ–µ–ª—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å.</React.Fragment>,
        buttonText: '–ï—â–µ —Ä–∞–∑–æ–∫.'
      }
    }
    
    return {
      title: '–ù–æ–≤–∞—è –∏–≥—Ä–∞',
      description: <React.Fragment>–ü—Ä–∞–≤–∏–ª–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã–µ ‚Äî –Ω–∞–∑—ã–≤–∞–π —Ä–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –≥–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Å—ã–≥—Ä–∞–ª –∫–æ–º–ø—å—é—Ç–µ—Ä. <br /><br />
      <strong>–ù–∞–ø—Ä–∏–º–µ—Ä</strong>: –ú–æ—Å–∫–≤–∞ üëâ –ê–º—Å—Ç–µ—Ä–¥–∞–º üëâ –ú—é–Ω—Ö–µ–Ω <br /><br /> P.S. –ö—Å—Ç–∞—Ç–∏, —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –≤—ã–∏–≥—Ä–∞—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ—ç—Ç–æ–º—É –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è.</React.Fragment>,
      buttonText: '–ü–æ–Ω—è—Ç–Ω–æ.'
    }
  }
  
  defineRecord() {
    const matchScore = this.props.score.human;
    let bestScore = -Infinity;
    
    if (!localStorage.getItem('bestScore')) {
      localStorage.setItem('bestScore', matchScore);
    } else {
      bestScore = Number(localStorage.getItem('bestScore'));
    }
    return matchScore > bestScore;
  }
  
  defineWordEnding(num) {
    if (num % 100 === 11) return '–æ–≤';
    if (num % 10 === 1) return '';
    if (num % 10 >= 2 && num % 10 <= 4) return '–∞';
    return '–æ–≤';
  }
  
  render() {
    const gameStarted = !this.props.gameStarted || this.props.gameEnded ? "modal_show" : "";
    
    return (
      <div className={`modal ${gameStarted}`}>
        <div className="modal-content">
          <h2 className="modal__title">{this.getContent().title}</h2>
          <p className="modal__description">{this.getContent().description}</p>
          <button className="modal__button" type="button" onClick={this.handleClick}>{this.getContent().buttonText}
          </button>
        </div>
      </div>
    );
  }
}

export default Modal;